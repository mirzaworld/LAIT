# LAIT Backend Production Dockerfile
# ==================================
# 
# Multi-stage build for optimized production deployment:
# - Lightweight python:3.11-slim base image
# - Production-ready Gunicorn WSGI server
# - Optimized for containerized deployment (Render, Railway, etc.)
# - Health check endpoint for load balancer integration

FROM python:3.11-slim

# Metadata
LABEL maintainer="LAIT Development Team"
LABEL description="LAIT Legal Intelligence Platform - Production Backend"
LABEL version="1.0.0"

# Set environment variables for production
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    FLASK_ENV=production \
    FLASK_DEBUG=false \
    PYTHONPATH="/app/backend:/app" \
    PORT=5003

# Create application user for security
RUN groupadd --gid 1000 appuser && \
    useradd --uid 1000 --gid appuser --shell /bin/bash --create-home appuser

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    pkg-config \
    libpq-dev \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set working directory
WORKDIR /app

# Copy and install Python dependencies
COPY backend/requirements.txt /app/backend/requirements.txt
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r /app/backend/requirements.txt

# Copy application code
COPY backend/ /app/backend/
COPY data/ /app/data/
COPY .env.example /app/.env

# Create necessary directories and set permissions
RUN mkdir -p /app/logs /app/uploads /app/backend/static && \
    chown -R appuser:appuser /app && \
    chmod +x /app/backend/start_gunicorn.sh

# Switch to non-root user
USER appuser

# Health check for load balancer integration
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${PORT}/api/health || exit 1

# Expose port
EXPOSE ${PORT}

# Set working directory to backend for proper imports
WORKDIR /app/backend

# Production entrypoint using Gunicorn
ENTRYPOINT ["./start_gunicorn.sh"]

# Optional override for development
CMD []
