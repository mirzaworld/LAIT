"""unified initial

Revision ID: 4a5f0287b26c
Revises: 
Create Date: 2025-08-10 03:36:02.518738

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '4a5f0287b26c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('matters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=2000), nullable=True),
    sa.Column('court', sa.String(length=200), nullable=True),
    sa.Column('judge_name', sa.String(length=200), nullable=True),
    sa.Column('opposing_counsel', sa.String(length=500), nullable=True),
    sa.Column('case_type', sa.String(length=100), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('expected_duration_months', sa.Integer(), nullable=True),
    sa.Column('budget', sa.Float(), nullable=True),
    sa.Column('estimated_cost', sa.Float(), nullable=True),
    sa.Column('risk_multiplier', sa.Float(), nullable=True),
    sa.Column('complexity_score', sa.Integer(), nullable=True),
    sa.Column('success_probability', sa.Float(), nullable=True),
    sa.Column('additional_info', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('vendor_market_insights',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('practice_area', sa.String(length=100), nullable=False),
    sa.Column('region', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('total_firms', sa.Integer(), nullable=True),
    sa.Column('avg_firm_size', sa.String(length=20), nullable=True),
    sa.Column('market_concentration', sa.Float(), nullable=True),
    sa.Column('top_5_firms', sa.JSON(), nullable=True),
    sa.Column('emerging_firms_count', sa.Integer(), nullable=True),
    sa.Column('new_entrants_last_year', sa.Integer(), nullable=True),
    sa.Column('market_growth_rate', sa.Float(), nullable=True),
    sa.Column('major_cities', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vendors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_id', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('vendor_type', sa.String(length=50), nullable=True),
    sa.Column('industry_category', sa.String(length=100), nullable=True),
    sa.Column('practice_area', sa.String(length=100), nullable=True),
    sa.Column('firm_size_category', sa.String(length=50), nullable=True),
    sa.Column('employee_count', sa.String(length=20), nullable=True),
    sa.Column('founded_year', sa.Integer(), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('state_province', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('address', sa.String(length=500), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('linkedin_url', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('risk_profile', sa.Float(), nullable=True),
    sa.Column('performance_score', sa.Float(), nullable=True),
    sa.Column('diversity_score', sa.Float(), nullable=True),
    sa.Column('total_spend', sa.Float(), nullable=True),
    sa.Column('invoice_count', sa.Integer(), nullable=True),
    sa.Column('avg_rate', sa.Float(), nullable=True),
    sa.Column('on_time_rate', sa.Float(), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('data_source', sa.String(length=50), nullable=True),
    sa.Column('historical_performance', sa.JSON(), nullable=True),
    sa.Column('additional_info', sa.JSON(), nullable=True),
    sa.Column('notes', sa.String(length=1000), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('details', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_number', sa.String(length=50), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('matter_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('hours', sa.Float(), nullable=True),
    sa.Column('rate', sa.Float(), nullable=True),
    sa.Column('risk_score', sa.Float(), nullable=True),
    sa.Column('analysis_result', sa.JSON(), nullable=True),
    sa.Column('pdf_s3_key', sa.String(length=255), nullable=True),
    sa.Column('overspend_risk', sa.Float(), nullable=True),
    sa.Column('uploaded_by', sa.Integer(), nullable=True),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['matter_id'], ['matters.id'], ),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invoice_number')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('content', sa.JSON(), nullable=True),
    sa.Column('read', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('vendor_benchmarks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('benchmark_type', sa.String(length=50), nullable=True),
    sa.Column('vendor_value', sa.Float(), nullable=True),
    sa.Column('market_average', sa.Float(), nullable=True),
    sa.Column('market_median', sa.Float(), nullable=True),
    sa.Column('percentile_rank', sa.Float(), nullable=True),
    sa.Column('peer_group', sa.String(length=100), nullable=True),
    sa.Column('peer_average', sa.Float(), nullable=True),
    sa.Column('period_start', sa.Date(), nullable=True),
    sa.Column('period_end', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('line_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('hours', sa.Float(), nullable=True),
    sa.Column('rate', sa.Float(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('timekeeper', sa.String(length=100), nullable=True),
    sa.Column('timekeeper_title', sa.String(length=100), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('is_flagged', sa.Boolean(), nullable=True),
    sa.Column('flag_reason', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('risk_factors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=True),
    sa.Column('factor_type', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=True),
    sa.Column('impact_score', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('risk_factors')
    op.drop_table('line_items')
    op.drop_table('vendor_benchmarks')
    op.drop_table('notifications')
    op.drop_table('invoices')
    op.drop_table('audit_logs')
    op.drop_table('vendors')
    op.drop_table('vendor_market_insights')
    op.drop_table('users')
    op.drop_table('matters')
    # ### end Alembic commands ###
